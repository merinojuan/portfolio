---
import '../global.css';

interface Props {
	title: string;
	description: string;
}

const { currentLocale } = Astro;
const { title, description } = Astro.props;
const { origin } = Astro.url;

const basedOrigin = `${origin}${import.meta.env.BASE_URL}`;
const socialsImage = `${basedOrigin}/socials.png`;
---

<!doctype html>
<html lang={currentLocale} data-theme="dark">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />

		<meta name="description" content={description} />
		<meta property="og:title" content={title}>
		<meta property="og:type" content="website" />
		<meta property="og:image" content={socialsImage}>
		<meta property="og:url" content={basedOrigin}>
		<meta name="twitter:card" content="summary_large_image">
		<meta property="og:description" content={description}>
		<meta property="og:site_name" content="Samply Website">
		<meta name="twitter:image:alt" content={title}>

		<link rel="icon" type="image/svg+xml" href=`${import.meta.env.BASE_URL}/favicon.svg` />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<div class="fixed top-0 z-[-2] h-screen w-full bg-[radial-gradient(#f0f0f0_1px,transparent_1px)] dark:bg-[radial-gradient(#292f35_1px,transparent_1px)] [background-size:16px_16px] [mask-image:radial-gradient(ellipse_50%_50%_at_50%_50%,#000_70%,transparent_100%)]"></div>
		<slot />
	</body>
</html>

<script>
import Atropos from 'atropos';

Atropos({
  el: '#presentation-card-atropos',
  alwaysActive: true,
  shadowScale: .9,
});

const atroposes = document.querySelectorAll('.experience-item-atropos');
atroposes.forEach(atropos => {
  Atropos({
    el: atropos as HTMLElement,
    alwaysActive: true,
    shadowScale: .5,
  });
});

function toggleTheme() {
	const html = document.querySelector('html');
	const label = document.querySelector('label');

	const currentTheme = html?.getAttribute('data-theme');
	if (currentTheme === 'light') {
		html?.setAttribute('data-theme', 'dark');
		localStorage.setItem('theme', 'dark');
	} else {
		html?.setAttribute('data-theme', 'light');
		localStorage.setItem('theme', 'light');
	}

	if (label?.classList.contains('swap-active')) label?.classList.remove('swap-active');
	else label?.classList.add('swap-active');
}

const storedTheme = localStorage.getItem('theme');
if (storedTheme === 'light') {
	toggleTheme();
}
const themeButton = document.getElementById('theme-button');

themeButton?.addEventListener('click', () => toggleTheme());
</script>
